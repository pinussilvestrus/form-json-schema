{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "http://camunda.org/schema/form-js/1.0",
  "title": "form-js JSON Schema",
  "type": "object",
  "allOf": [
    {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "/#component/rules-default",
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "default"
              }
            },
            "required": [
              "type"
            ]
          },
          "then": {
            "properties": {
              "layout": false,
              "conditional": false,
              "properties": false
            }
          }
        }
      ]
    }
  ],
  "properties": {
    "type": {
      "$id": "#/type",
      "description": "The type of a form.",
      "type": "string",
      "const": "default"
    },
    "id": {
      "$id": "#/id",
      "description": "The id of a form.",
      "type": "string"
    },
    "schemaVersion": {
      "$id": "#/schemaVersion",
      "description": "The schema version of a form",
      "type": "integer",
      "minimum": 1,
      "maximum": 12
    },
    "executionPlatform": {
      "$id": "#/executionPlatform",
      "description": "The target execution platform of a form",
      "type": "string"
    },
    "executionPlatformVersion": {
      "$id": "#/executionPlatformVersion",
      "description": "The target execution platform version of a form",
      "type": "string"
    },
    "exporter": {
      "$id": "#/exporter",
      "$schema": "http://json-schema.org/draft-07/schema",
      "description": "The exporter tool of a form",
      "type": "object",
      "properties": {
        "name": {
          "$id": "#/exporter/name",
          "description": "The name of the exporter tool",
          "type": "string"
        },
        "version": {
          "$id": "#/exporter/version",
          "description": "The version of the exporter tool",
          "type": "string"
        }
      }
    },
    "components": {
      "type": "array",
      "$id": "#/components",
      "description": "List of form fields.",
      "items": {
        "type": "object",
        "$id": "#/component",
        "$schema": "http://json-schema.org/draft-07/schema",
        "allOf": [
          {
            "$schema": "http://json-schema.org/draft-07/schema",
            "$id": "/#component/rules-required-properties",
            "allOf": [
              {
                "if": {
                  "properties": {
                    "type": {
                      "enum": [
                        "checkbox",
                        "checklist",
                        "datetime",
                        "number",
                        "radio",
                        "select",
                        "taglist",
                        "textfield",
                        "textarea"
                      ]
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "then": {
                  "required": [
                    "key"
                  ]
                }
              }
            ]
          },
          {
            "$schema": "http://json-schema.org/draft-07/schema",
            "$id": "/#component/rules-allowed-properties",
            "allOf": [
              {
                "if": {
                  "not": {
                    "properties": {
                      "type": {
                        "const": "text"
                      }
                    },
                    "required": [
                      "type"
                    ]
                  }
                },
                "then": {
                  "properties": {
                    "text": false
                  }
                }
              },
              {
                "if": {
                  "not": {
                    "anyOf": [
                      {
                        "properties": {
                          "type": {
                            "enum": [
                              "checkbox",
                              "checklist",
                              "datetime",
                              "number",
                              "radio",
                              "select",
                              "taglist",
                              "textfield",
                              "textarea"
                            ]
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      {
                        "properties": {
                          "type": {
                            "const": "button"
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      {
                        "properties": {
                          "type": {
                            "enum": [
                              "group",
                              "dynamiclist"
                            ]
                          }
                        },
                        "required": [
                          "type"
                        ]
                      }
                    ]
                  }
                },
                "then": {
                  "properties": {
                    "label": false
                  }
                }
              },
              {
                "if": {
                  "not": {
                    "properties": {
                      "type": {
                        "enum": [
                          "checkbox",
                          "checklist",
                          "datetime",
                          "number",
                          "radio",
                          "select",
                          "taglist",
                          "textfield",
                          "textarea"
                        ]
                      }
                    },
                    "required": [
                      "type"
                    ]
                  }
                },
                "then": {
                  "properties": {
                    "description": false,
                    "key": false,
                    "disabled": false,
                    "readonly": false,
                    "validate": false
                  }
                }
              },
              {
                "if": {
                  "not": {
                    "properties": {
                      "type": {
                        "const": "button"
                      }
                    },
                    "required": [
                      "type"
                    ]
                  }
                },
                "then": {
                  "properties": {
                    "action": false
                  }
                }
              },
              {
                "if": {
                  "not": {
                    "properties": {
                      "type": {
                        "const": "image"
                      }
                    },
                    "required": [
                      "type"
                    ]
                  }
                },
                "then": {
                  "properties": {
                    "source": false,
                    "alt": false
                  }
                }
              },
              {
                "if": {
                  "not": {
                    "properties": {
                      "type": {
                        "const": "datetime"
                      }
                    },
                    "required": [
                      "type"
                    ]
                  }
                },
                "then": {
                  "properties": {
                    "subtype": false,
                    "dateLabel": false,
                    "timeLabel": false,
                    "use24h": false,
                    "timeSerializingFormat": false,
                    "timeInterval": false,
                    "disallowPassedDates": false
                  }
                }
              },
              {
                "if": {
                  "not": {
                    "properties": {
                      "type": {
                        "const": "number"
                      }
                    },
                    "required": [
                      "type"
                    ]
                  }
                },
                "then": {
                  "properties": {
                    "increment": false,
                    "decimalDigits": false,
                    "serializeToString": false,
                    "validate": {
                      "properties": {
                        "min": false,
                        "max": false
                      }
                    }
                  }
                }
              },
              {
                "if": {
                  "not": {
                    "properties": {
                      "type": {
                        "const": "select"
                      }
                    },
                    "required": [
                      "type"
                    ]
                  }
                },
                "then": {
                  "properties": {
                    "searchable": false
                  }
                }
              },
              {
                "if": {
                  "not": {
                    "properties": {
                      "type": {
                        "enum": [
                          "checklist",
                          "radio",
                          "select",
                          "taglist"
                        ]
                      }
                    },
                    "required": [
                      "type"
                    ]
                  }
                },
                "then": {
                  "properties": {
                    "values": false,
                    "valuesKey": false,
                    "valuesExpression": false
                  }
                }
              },
              {
                "if": {
                  "not": {
                    "properties": {
                      "type": {
                        "const": "textfield"
                      }
                    },
                    "required": [
                      "type"
                    ]
                  }
                },
                "then": {
                  "properties": {
                    "validate": {
                      "properties": {
                        "validationType": false,
                        "pattern": false
                      }
                    }
                  }
                }
              },
              {
                "if": {
                  "not": {
                    "properties": {
                      "type": {
                        "enum": [
                          "textfield",
                          "textarea"
                        ]
                      }
                    },
                    "required": [
                      "type"
                    ]
                  }
                },
                "then": {
                  "properties": {
                    "validate": {
                      "properties": {
                        "minLength": false,
                        "maxLength": false
                      }
                    }
                  }
                }
              },
              {
                "if": {
                  "not": {
                    "properties": {
                      "type": {
                        "enum": [
                          "textfield",
                          "number"
                        ]
                      }
                    },
                    "required": [
                      "type"
                    ]
                  }
                },
                "then": {
                  "properties": {
                    "appearance": {
                      "properties": {
                        "prefixAdorner": false,
                        "suffixAdorner": false
                      }
                    }
                  }
                }
              },
              {
                "if": {
                  "anyOf": [
                    {
                      "not": {
                        "properties": {
                          "type": {
                            "enum": [
                              "checkbox",
                              "checklist",
                              "datetime",
                              "number",
                              "radio",
                              "select",
                              "taglist",
                              "textfield",
                              "textarea"
                            ]
                          }
                        },
                        "required": [
                          "type"
                        ]
                      }
                    },
                    {
                      "allOf": [
                        {
                          "properties": {
                            "type": {
                              "enum": [
                                "checklist",
                                "radio",
                                "select",
                                "taglist"
                              ]
                            }
                          },
                          "required": [
                            "type"
                          ]
                        },
                        {
                          "properties": {
                            "valuesKey": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "valuesKey"
                          ]
                        }
                      ]
                    }
                  ]
                },
                "then": {
                  "properties": {
                    "defaultValue": false
                  }
                }
              },
              {
                "if": {
                  "not": {
                    "properties": {
                      "type": {
                        "const": "spacer"
                      }
                    },
                    "required": [
                      "type"
                    ]
                  }
                },
                "then": {
                  "properties": {
                    "height": false
                  }
                }
              },
              {
                "if": {
                  "not": {
                    "properties": {
                      "type": {
                        "enum": [
                          "group",
                          "dynamiclist"
                        ]
                      }
                    },
                    "required": [
                      "type"
                    ]
                  }
                },
                "then": {
                  "properties": {
                    "path": false,
                    "showOutline": false,
                    "verticalAlignment": false
                  }
                }
              }
            ]
          },
          {
            "$schema": "http://json-schema.org/draft-07/schema",
            "$id": "/#component/rules-defaultValue-type",
            "allOf": [
              {
                "if": {
                  "properties": {
                    "type": {
                      "const": "checkbox"
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "then": {
                  "properties": {
                    "defaultValue": {
                      "type": "boolean"
                    }
                  }
                }
              },
              {
                "if": {
                  "properties": {
                    "type": {
                      "enum": [
                        "textfield",
                        "textarea",
                        "datetime",
                        "radio",
                        "select"
                      ]
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "then": {
                  "properties": {
                    "defaultValue": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "if": {
                  "properties": {
                    "type": {
                      "const": "number"
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "then": {
                  "properties": {
                    "defaultValue": {
                      "type": [
                        "number",
                        "string"
                      ]
                    }
                  }
                }
              },
              {
                "if": {
                  "properties": {
                    "type": {
                      "enum": [
                        "checklist",
                        "taglist"
                      ]
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "then": {
                  "properties": {
                    "defaultValue": {
                      "type": "array"
                    }
                  }
                }
              }
            ]
          }
        ],
        "properties": {
          "type": {
            "$id": "#/component/type",
            "$schema": "http://json-schema.org/draft-07/schema",
            "description": "The type of a form field.",
            "enum": [
              "textfield",
              "number",
              "datetime",
              "textarea",
              "checkbox",
              "radio",
              "select",
              "checklist",
              "taglist",
              "image",
              "text",
              "button",
              "spacer",
              "group",
              "dynamiclist"
            ]
          },
          "id": {
            "$id": "#/component/id",
            "description": "The id of a form field.",
            "type": "string"
          },
          "label": {
            "$id": "#/component/label",
            "description": "Label displayed on top of the form field.",
            "type": "string"
          },
          "description": {
            "$id": "#/component/description",
            "description": "Description provided below the form field.",
            "type": "string"
          },
          "key": {
            "$id": "#/component/key",
            "description": "Binds the form field to a form variable. Can be a dot separated path.",
            "type": "string",
            "pattern": "^\\w+(\\.\\w+)*$"
          },
          "readonly": {
            "$id": "#/component/readonly",
            "description": "Makes the form field read only.",
            "type": [
              "boolean",
              "string"
            ]
          },
          "disabled": {
            "$id": "#/component/disabled",
            "description": "Disables the form field.",
            "type": [
              "boolean",
              "string"
            ]
          },
          "text": {
            "$id": "#/component/text",
            "description": "Text content of a text view. Either an expression, plain text, or templating syntax.",
            "type": "string"
          },
          "defaultValue": {
            "$id": "#/component/defaultValue",
            "description": "Provides a default value for the form field in case no input data exists for the given key.",
            "type": [
              "string",
              "boolean",
              "number",
              "array"
            ]
          },
          "action": {
            "$id": "#/component/action",
            "description": "A button can either trigger a submit or a reset action. Defaults to submit.",
            "default": "submit",
            "type": "string",
            "enum": [
              "submit",
              "reset"
            ]
          },
          "source": {
            "$id": "#/component/source",
            "description": "Specifies the image source via expression or static value (hyperlink or data URI).",
            "type": "string"
          },
          "alt": {
            "$id": "#/component/alt",
            "description": "Provides an alternative text to the image in case it cannot be displayed.",
            "type": "string"
          },
          "subtype": {
            "$id": "#/component/subtype",
            "description": "Selects the type of the datetime component. This can either be date, time, or datetime. Defaults to date.",
            "type": "string",
            "default": "date",
            "enum": [
              "date",
              "time",
              "datetime"
            ]
          },
          "dateLabel": {
            "$id": "#/component/dateLabel",
            "description": "Label displayed beside the date input field.",
            "type": "string"
          },
          "timeLabel": {
            "$id": "#/component/timeLabel",
            "description": "Label displayed beside the time input field.",
            "type": "string"
          },
          "use24h": {
            "$id": "#/component/use24h",
            "description": "Enables 24-hour time format.",
            "type": "boolean"
          },
          "timeSerializingFormat": {
            "$id": "#/component/timeSerializingFormat",
            "description": "Defines the time data format. This can either be utc_offset, utc_normalized, or no_timezone.",
            "type": "string",
            "enum": [
              "utc_offset",
              "utc_normalized",
              "no_timezone"
            ]
          },
          "timeInterval": {
            "$id": "#/component/timeInterval",
            "description": "Defines the steps of time that can be selected in the time input field.",
            "type": "integer",
            "minimum": 1,
            "maximum": 60
          },
          "disallowPassedDates": {
            "$id": "#/component/disallowPassedDates",
            "description": "Enables the restriction to not allow past dates.",
            "type": "boolean"
          },
          "increment": {
            "$id": "#/component/increment",
            "description": "Defines the increment between valid field value.",
            "type": [
              "number",
              "string"
            ]
          },
          "decimalDigits": {
            "$id": "#/component/decimalDigits",
            "description": "Defines the maximum number of digits after the decimal..",
            "type": "integer"
          },
          "serializeToString": {
            "$id": "#/component/serializeToString",
            "description": "Configures the output format of the value. This enables unlimited precision digits.",
            "type": "boolean"
          },
          "searchable": {
            "$id": "#/component/searchable",
            "description": "Allows the select entries to be searched via keyboard.",
            "type": "boolean"
          },
          "valuesKey": {
            "$id": "#/component/valuesKey",
            "description": "Form fields can be configured with an options source defining the individual choices the select provides.",
            "type": "string",
            "pattern": "^[^\\s]*$"
          },
          "valuesExpression": {
            "$id": "#/component/valuesExpression",
            "description": "Form fields can be configured with a FEEL expression defining the individual choices the select provides.",
            "type": "string"
          },
          "height": {
            "$id": "#/component/height",
            "description": "The height of the spacer component.",
            "type": "number"
          },
          "path": {
            "$id": "#/component/path",
            "description": "Assigns a path that maps form field children into a data object. Can be a dot separated path.",
            "type": "string",
            "pattern": "^(\\w+(\\.\\w+)*)*$"
          },
          "showOutline": {
            "$id": "#/component/showOutline",
            "description": "Groups and dynamic lists can have a visual outline.",
            "type": "boolean"
          },
          "verticalAlignment": {
            "$id": "#/component/verticalAlignment",
            "description": "Groups and dynamic lists can be vertical aligned.",
            "type": "string",
            "default": "start",
            "enum": [
              "start",
              "center",
              "end"
            ]
          },
          "validate": {
            "$id": "#/component/validate",
            "$schema": "http://json-schema.org/draft-07/schema",
            "type": "object",
            "description": "Given that one of the following properties is set, the form will only submit when the respective condition is fulfilled. Otherwise, a validation error will be displayed.",
            "properties": {
              "required": {
                "$id": "/#component/validate/required",
                "type": "boolean",
                "description": "Form field must contain a value."
              },
              "validationType": {
                "$id": "/#component/validate/validationType",
                "type": "string",
                "description": "Use predefined validation patterns. Available options are: Email, Phone, and Custom (empty).",
                "enum": [
                  "email",
                  "phone",
                  null
                ]
              },
              "pattern": {
                "$id": "/#component/validate/pattern",
                "type": "string",
                "description": "Form field value must match the provided RegEx pattern."
              },
              "minLength": {
                "$id": "/#component/validate/minLength",
                "type": [
                  "integer",
                  "string"
                ],
                "description": "Form field value must be at least the provided length."
              },
              "maxLength": {
                "$id": "/#component/validate/maxLength",
                "type": [
                  "integer",
                  "string"
                ],
                "description": "Form field value must be at most the provided length."
              },
              "min": {
                "$id": "/#component/validate/min",
                "type": [
                  "number",
                  "string"
                ],
                "description": "Form field value must be at least the provided number."
              },
              "max": {
                "$id": "/#component/validate/max",
                "type": [
                  "number",
                  "string"
                ],
                "description": "Form field value must be at most the provided number."
              }
            }
          },
          "layout": {
            "$id": "#/component/layout",
            "$schema": "http://json-schema.org/draft-07/schema",
            "type": "object",
            "description": "Layout related information of a form field.",
            "properties": {
              "row": {
                "$id": "/#component/layout/row",
                "type": "string",
                "description": "Row in which a form field is placed."
              },
              "columns": {
                "$id": "/#component/validate/columns",
                "type": [
                  "integer",
                  "null"
                ],
                "description": "Space the field will use inside its row. No value means it will automatically adjust to available space in the row.",
                "minimum": 2,
                "maximum": 16
              }
            }
          },
          "values": {
            "$id": "#/component/values",
            "$schema": "http://json-schema.org/draft-07/schema",
            "type": "array",
            "description": "Static options of a form field",
            "items": {
              "type": "object",
              "properties": {
                "label": {
                  "$id": "#/component/values/label",
                  "type": "string",
                  "description": "Label of the option"
                },
                "value": {
                  "$id": "#/component/values/value",
                  "type": "string",
                  "description": "Value of the option"
                }
              }
            }
          },
          "appearance": {
            "$id": "#/component/appearance",
            "$schema": "http://json-schema.org/draft-07/schema",
            "type": "object",
            "description": "Changes the visual appearance of the form field.",
            "properties": {
              "prefixAdorner": {
                "$id": "/#component/appearance/prefixAdorner",
                "type": "string",
                "description": "Adds an appendage before the input."
              },
              "suffixAdorner": {
                "$id": "/#component/appearance/suffixAdorner",
                "type": "string",
                "description": "Adds an appendage after the input."
              }
            }
          },
          "conditional": {
            "$id": "#/component/conditional",
            "$schema": "http://json-schema.org/draft-07/schema",
            "type": "object",
            "description": "Information of a form field related to conditional rendering.",
            "properties": {
              "hide": {
                "$id": "/#component/conditional/hide",
                "type": [
                  "string",
                  "boolean"
                ],
                "description": "Expression to hide the form field."
              }
            }
          },
          "properties": {
            "$id": "#/component/properties",
            "$schema": "http://json-schema.org/draft-07/schema",
            "type": "object",
            "description": "Custom properties of a form field."
          }
        },
        "required": [
          "type"
        ]
      }
    }
  },
  "required": [
    "type",
    "components"
  ]
}